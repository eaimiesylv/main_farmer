# PHP
trigger:
  - main
pool:
  vmImage: ubuntu-latest
variables:
  phpVersion: 8.1
stages:
  - stage: Build
    displayName: "Build"
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: Build
        steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'Milan Detail Systems(c0116ebd-a597-48d0-bf59-7c67c925ae3a)'
              KeyVaultName: 'mdsdevelopmentkv'
              SecretsFilter: 'LARAVEL-DEV-SENTRY-LARAVEL-DSN'
              RunAsPreJob: true

          - script: |
              if grep -q "'debug'\s*=>\s*true" "config/app.php"; then
                echo "Found debug flag. Stopping execution...";
                exit 1
              fi
            displayName: "Debug Flag"

          - script: |
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)
              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
              php -version
            displayName: "Use PHP version $(phpVersion)"

          - script: |
              mkdir bootstrap/cache
              chmod -R 777 bootstrap/cache/
              composer install --no-interaction --prefer-dist --ignore-platform-req=ext-psr
            displayName: "composer install"

          - script: |
              touch database.sqlite
              touch $(System.DefaultWorkingDirectory)/database.sqlite
              cp .env.example .env
              echo DB_DATABASE=$(System.DefaultWorkingDirectory)/database.sqlite >> .env
              echo SENTRY_LARAVEL_DSN=$(LARAVEL-DEV-SENTRY-LARAVEL-DSN) >> .env
              php artisan migrate
              php artisan db:seed
            displayName: "create app db"
            continueOnError: false

          - script: touch tests/db.sqlite
            displayName: "create app db for unit tests"
            continueOnError: false

          - script: XDEBUG_MODE=coverage DB_DATABASE=$(System.DefaultWorkingDirectory)/tests/db.sqlite ./vendor/bin/phpunit --log-junit tests/results/junit.xml --coverage-cobertura=tests/coverage/cobertura.xml
            displayName: "Run tests with phpunit"
            continueOnError: false

          - script: ./vendor/bin/phpstan analyse app --level=0
            displayName: "run static code analysis"
            continueOnError: false

          - task: PublishTestResults@2
            displayName: "Publish test results"
            inputs:
              testRunner: "JUnit"
              testResultsFiles: "junit.xml"
              searchFolder: "$(System.DefaultWorkingDirectory)/tests/results"
              mergeTestResults: false

          - task: PublishCodeCoverageResults@1
            displayName: "Publish coverage report"
            condition: always()
            inputs:
              codeCoverageTool: "Cobertura"
              summaryFileLocation: "$(System.DefaultWorkingDirectory)/tests/coverage/cobertura.xml"
              pathToSources: "$(System.DefaultWorkingDirectory)"
              failIfCoverageEmpty: false

          - task: DeleteFiles@1
            displayName: "clean artifacts"
            inputs:
              SourceFolder: "$(system.defaultWorkingDirectory)/.azure"
              Contents: "**"
              RemoveSourceFolder: true

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "$(system.defaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/web/app.zip"
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact: web"
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)/web"
              ArtifactName: "web"
